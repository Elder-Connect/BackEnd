name: Deploy Pipeline

on:
  push:
    branches:
      - main
      - dev
      - deploy-dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Build with Maven
      run: |
        chmod +x ./mvnw
        ./mvnw clean package -DskipTests

    - name: Copy Jar to EC2 via Jump Host
      env:
        PRIVATE_EC2_IP: ${{ secrets.PRIVATE_EC2_IP }}
        PUBLIC_EC2_IP: ${{ secrets.PUBLIC_EC2_IP }}
        JUMP_HOST_USER: ${{ secrets.JUMP_HOST_USER }}
        PRIVATE_HOST_USER: ${{ secrets.PRIVATE_HOST_USER }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      run: |
        echo "$SSH_KEY" > ssh_key.pem
        chmod 600 ssh_key.pem
        scp -o StrictHostKeyChecking=no -o ProxyJump=${JUMP_HOST_USER}@${PUBLIC_EC2_IP} -i ssh_key.pem /home/runner/work/BackEnd/BackEnd/target/elder-ly-1.0.jar ${PRIVATE_HOST_USER}@${PRIVATE_EC2_IP}:/home/${PRIVATE_HOST_USER}/

    - name: Kill current Instance
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        ssh -i private_key.pem $SERVER_USER@$SERVER_HOST << 'EOF'
          pkill -f 'java -jar' || echo "No Instance found"
          exit
        EOF

    - name: Start Application
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      run: |
        ssh -i private_key.pem $SERVER_USER@$SERVER_HOST << 'EOF'
          chmod +x start.sh
          ./start.sh
          exit
        EOF
