name: Deploy Pipeline

on:
  push:
    branches:
      - main
      - dev
      - deploy-dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Build with Maven
      run: |
        chmod +x ./mvnw
        ./mvnw clean package -DskipTests

    - name: Install sshpass
      run: sudo apt-get install -y sshpass

    - name: Add server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to Server
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        sshpass -p "$SERVER_PASSWORD" scp /home/runner/work/BackEnd/BackEnd/target/elder-ly-0.3.jar $SERVER_USER@$SERVER_HOST:/home/$SERVER_USER
        sshpass -p "$SERVER_PASSWORD" scp /home/runner/work/BackEnd/BackEnd/start.sh $SERVER_USER@$SERVER_HOST:/home/$SERVER_USER

    - name: Kill current Instance
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        sshpass -p "$SERVER_PASSWORD" ssh $SERVER_USER@$SERVER_HOST << 'EOF'
          pkill -f 'java -jar'
          exit
        EOF

    - name: Start Application
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        sshpass -p "$SERVER_PASSWORD" ssh $SERVER_USER@$SERVER_HOST << 'EOF'
          chmod +x start.sh
          ./start.sh
          exit
        EOF
